import { Component, Input, NgModule } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SliderComponent {
    constructor() {
        this.state = 'void';
        this.disableSliderButtons = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.imageUrls = this.images;
    }
    /**
     * @param {?} arr
     * @param {?} reverse
     * @return {?}
     */
    imageRotate(arr, reverse) {
        if (reverse)
            arr.unshift(arr.pop());
        else
            arr.push(arr.shift());
        return arr;
    }
    /**
     * @return {?}
     */
    moveLeft() {
        if (this.disableSliderButtons) {
            return;
        }
        this.state = 'right';
        this.imageRotate(this.imageUrls, true);
    }
    /**
     * @return {?}
     */
    moveRight() {
        if (this.disableSliderButtons) {
            return;
        }
        this.state = 'left';
        this.imageRotate(this.imageUrls, false);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onFinish($event) {
        this.state = 'void';
        this.disableSliderButtons = false;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onStart($event) {
        this.disableSliderButtons = true;
    }
}
SliderComponent.decorators = [
    { type: Component, args: [{
                selector: 'angular-image-slider',
                template: `<div id="container">
  <div class="overlay-left"></div>
  <div class="overlay-right"></div>
  <div id="grid" class="image-cropper">
    <img *ngFor="let url of imageUrls; let i = index"
      [@move]="state"
      (@move.done)="onFinish($event)"
      (@move.start)="onStart($event)"
      [attr.class]="i"
      [src]="url"
      alt="" />
  </div>
  <div>
    <a id="slider-buttons-left" (click)="moveLeft()">&#10094;</a>
    <a id="slider-buttons-right" (click)="moveRight()">&#10095;</a>
  </div>
</div>`,
                styles: [`#container{
   position:relative;
   overflow-x:hidden;
}
#grid{
  display:grid;
  height:150;
  grid-template-columns:repeat(3, 1fr);
  grid-template-rows:300px;
  grid-column-gap:20px;
}
.overlay-left{
    position:absolute;
    display:inline-block;
    display:grid;
    width:7rem;
    height:100%;
    top:0%;
    left:0;
    bottom:0;
    background-color:white;
    z-index:1;
    cursor:pointer;
}
.overlay-right{
    position:absolute;
    display:inline-block;
    display:grid;
    width:7rem;
    height:100%;
    top:0%;
    right:0;
    bottom:0;
    background-color:white;
    z-index:1;
    cursor:pointer;
}
#grid > div{
  background-color:gray;
}
#slider-buttons-left{
  position:absolute;
  z-index:1000;
  top:130px;
  float:left;
  cursor:pointer;
  font-size:250%;
  color:#778899;
  left:60px;
}
#slider-buttons-right{
  position:absolute;
  top:130px;
  z-index:1000;
  float:right;
  cursor:pointer;
  font-size:250%;
  color:#778899;
  right:60px;
}
.image-cropper{
    height:300px;
    display:-webkit-box;
    display:-ms-flexbox;
    display:flex;
    -webkit-box-orient:vertical;
    -webkit-box-direction:normal;
        -ms-flex-direction:column;
            flex-direction:column;
    -webkit-box-pack:center;
        -ms-flex-pack:center;
            justify-content:center;
    -webkit-box-align:center;
        -ms-flex-align:center;
            align-items:center;
}
.image-cropper img{
    max-width:100%;
    max-height:100%;
    display:block;
    margin:0 auto;
}`],
                animations: [
                    trigger('move', [
                        state('in', style({ transform: 'translateX(0)' })),
                        transition('void => left', [
                            style({ transform: 'translateX(100%)' }),
                            animate(200)
                        ]),
                        transition('left => void', [
                            animate(200, style({ transform: 'translateX(0)' }))
                        ]),
                        transition('void => right', [
                            style({ transform: 'translateX(-100%)' }),
                            animate(200)
                        ]),
                        transition('right => void', [
                            animate(200, style({ transform: 'translateX(0)' }))
                        ])
                    ])
                ]
            },] },
];
/** @nocollapse */
SliderComponent.ctorParameters = () => [];
SliderComponent.propDecorators = {
    "images": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class SliderModule {
}
SliderModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    SliderComponent
                ],
                exports: [SliderComponent]
            },] },
];
/** @nocollapse */
SliderModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { SliderModule, SliderComponent as Éµa };
//# sourceMappingURL=angular-image-slider.js.map
